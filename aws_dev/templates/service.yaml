AWSTemplateFormatVersion: 2010-09-09


Parameters:
  Cluster:
    Type: String

  TargetGroup:
    Type: String

#  SourceSecurityGroup:
#    Type: AWS::EC2::SecurityGroup::Id

#  Subnets:
#    Type: List<AWS::EC2::Subnet::Id>

  VpcId:
    Type: AWS::EC2::VPC::Id

Resources:
  TaskExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy

  LogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /ecs/${AWS::StackName}

  RedisService:
    Type: AWS::ECS::Service
    Properties:
      Cluster: !Ref Cluster
      DesiredCount: 1
      TaskDefinition: !Ref RedisTaskDefinition
      LaunchType: EC2

  RedisTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: redis
      RequiresCompatibilities:
        - EC2
      Memory: 256
      Cpu: 256
      NetworkMode: bridge
      ExecutionRoleArn: !Ref TaskExecutionRole
      ContainerDefinitions:
        - Name: redis-container
          Image: redis:latest
          Essential: true
          PortMappings:
            - Protocol: tcp
              HostPort: 6379
              ContainerPort: 6379
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-region: !Ref AWS::Region
              awslogs-group: !Ref LogGroup
              awslogs-stream-prefix: !Sub /ecs/${AWS::StackName}/redis

  #  PrivateHostedZone:
  #    Type: AWS::Route53::HostedZone
  #    Properties:
  #      Name: asobann-dev.
  #      VPCs:
  #        - !GetAtt VPC.Outputs.VpcId

  PrivateNamespace:
    Type: AWS::ServiceDiscovery::PrivateDnsNamespace
    Properties:
      Name: asobann-dev.
      Vpc: !Ref VpcId

  RedisDiscoveryService:
    Type: AWS::ServiceDiscovery::Service
    Properties:
      DnsConfig:
        RoutingPolicy: MULTIVALUE
        DnsRecords:
          - TTL: 60
            Type: SRV
      HealthCheckCustomConfig:
        FailureThreshold: 1
      Name: redis
      NamespaceId: !Ref PrivateNamespace

  MongoDbDiscoveryService:
    Type: AWS::ServiceDiscovery::Service
    Properties:
      DnsConfig:
        RoutingPolicy: MULTIVALUE
        DnsRecords:
          - TTL: 60
            Type: SRV
      HealthCheckCustomConfig:
        FailureThreshold: 1
      Name: mongodb
      NamespaceId: !Ref PrivateNamespace

Outputs:
  RedisService:
    Value: !Ref RedisService

